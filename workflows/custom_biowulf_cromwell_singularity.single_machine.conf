# include the application.conf at the top
include required(classpath("application"))

system.io {
  number-of-attempts = 1
}

backend {
  default: singularity
  providers: {
    singularity {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        run-in-background = true
        runtime-attributes = """
        Int maxRetries = 1
        Int time = 600
        Int cpu = 2
        Float memory_gb = 20.0
        String docker
        String? disks = "local-disk 20 SSD"
        """
        submit-docker = """
            new_script=$(echo "${script}" | sed 's/.*\(\/cromwell-executions\)/\1/g')
            # Ensure singularity is loaded if it's installed as a module
            module load singularity

            # Build the Docker image into a singularity image
            DOCKER_CONTAINER_DIR="/data/$USER/containers"
            if [ ! -d $DOCKER_CONTAINER_DIR ]; then
                mkdir -p $DOCKER_CONTAINER_DIR
                chmod 2770 $DOCKER_CONTAINER_DIR
            fi
            DOCKER_NAME=$(sed -e 's/[^A-Za-z0-9._-]/_/g' <<< ${docker})
            IMAGE=$DOCKER_CONTAINER_DIR/$DOCKER_NAME.sif
            if [ ! -f $IMAGE ]; then
                singularity pull $IMAGE docker://${docker}
            fi
            
            # Submit the script
            export SINGULARITY_CACHEDIR=/data/markellocj/singularity_cache/
            time singularity exec --containall --bind ${cwd}:${docker_cwd} $IMAGE ${job_shell} ${docker_script}
        """
        filesystems {
            local {
              enabled: true
            }
            http {
              enabled: true
            }
        }
      }
    }
  }
}


